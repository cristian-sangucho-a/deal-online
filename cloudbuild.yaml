steps:
  # ================================================================
  # Auth Service (Desplegar primero)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auth-service:$SHORT_SHA",
        "./microservices/auth-service",
      ]
    id: "build-auth-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auth-service:$SHORT_SHA",
      ]
    id: "push-auth-service"
    waitFor: ["build-auth-service"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "auth-service"
      - "--image=southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auth-service:$SHORT_SHA"
      - "--region=southamerica-east1"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--memory=256Mi"
      - "--cpu=1"
      - "--timeout=300"
      - "--set-env-vars=RABBITMQ_EMAIL_QUEUE=emails_queue"
      - "--set-secrets=DATABASE_URL=AUTH_DB_URL:latest,JWT_SECRET=JWT_SECRET:latest,RABBITMQ_URL=RABBITMQ_URL:latest"
    id: "deploy-auth-service"
    waitFor: ["push-auth-service"]

  # ================================================================
  # Auction Service (Desplegar segundo)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auction-service:$SHORT_SHA",
        "./microservices/auction-service",
      ]
    id: "build-auction-service"
    # Puede ejecutarse en paralelo con auth-service
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auction-service:$SHORT_SHA",
      ]
    id: "push-auction-service"
    waitFor: ["build-auction-service"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "auction-service"
      - "--image=southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auction-service:$SHORT_SHA"
      - "--region=southamerica-east1"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--memory=256Mi"
      - "--cpu=1"
      - "--timeout=300"
      - "--set-env-vars=RABBITMQ_EMAIL_QUEUE=emails_queue"
      - "--set-secrets=DATABASE_URL=AUCTION_DB_URL:latest,JWT_SECRET=JWT_SECRET:latest,RABBITMQ_URL=RABBITMQ_URL:latest"
    id: "deploy-auction-service"
    waitFor: ["push-auction-service"]

  # ================================================================
  # Chat Service (Desplegar tercero)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/chat-service:$SHORT_SHA",
        "./microservices/chat-service",
      ]
    id: "build-chat-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/chat-service:$SHORT_SHA",
      ]
    id: "push-chat-service"
    waitFor: ["build-chat-service"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "chat-service"
      - "--image=southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/chat-service:$SHORT_SHA"
      - "--region=southamerica-east1"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--memory=256Mi"
      - "--cpu=1"
      - "--timeout=300"
      - "--set-secrets=DATABASE_URL=CHAT_DB_URL:latest,JWT_SECRET=JWT_SECRET:latest"
    id: "deploy-chat-service"
    waitFor: ["push-chat-service"]

  # ================================================================
  # Email Service (Puede desplegarse en cualquier momento)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/email-service:$SHORT_SHA",
        "./microservices/email-service",
      ]
    id: "build-email-service"
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/email-service:$SHORT_SHA",
      ]
    id: "push-email-service"
    waitFor: ["build-email-service"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "email-service"
      - "--image=southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/email-service:$SHORT_SHA"
      - "--region=southamerica-east1"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--memory=256Mi"
      - "--cpu=1"
      - "--timeout=300"
      - "--set-env-vars=RABBITMQ_EMAIL_QUEUE=emails_queue"
      - "--set-secrets=RABBITMQ_URL=RABBITMQ_URL:latest,EMAIL_USER=EMAIL_USER:latest,EMAIL_PASS=EMAIL_PASS:latest"
    id: "deploy-email-service"
    waitFor: ["push-email-service"]

  # ================================================================
  # Configurar permisos p√∫blicos para todos los servicios
  # ================================================================
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run services add-iam-policy-binding auth-service --region=southamerica-east1 --member="allUsers" --role="roles/run.invoker"
        gcloud run services add-iam-policy-binding auction-service --region=southamerica-east1 --member="allUsers" --role="roles/run.invoker"
        gcloud run services add-iam-policy-binding chat-service --region=southamerica-east1 --member="allUsers" --role="roles/run.invoker"
        gcloud run services add-iam-policy-binding email-service --region=southamerica-east1 --member="allUsers" --role="roles/run.invoker"
    id: "set-public-permissions"
    waitFor:
      [
        "deploy-auth-service",
        "deploy-auction-service",
        "deploy-chat-service",
        "deploy-email-service",
      ]

  # ================================================================
  # API Gateway (Desplegar al final)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/api-gateway:$SHORT_SHA",
        "./api-gateway",
      ]
    id: "build-api-gateway"
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/api-gateway:$SHORT_SHA",
      ]
    id: "push-api-gateway"
    waitFor: ["build-api-gateway"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        AUTH_URL=$(gcloud run services describe auth-service --platform=managed --region=southamerica-east1 --format='value(status.url)')
        AUCTION_URL=$(gcloud run services describe auction-service --platform=managed --region=southamerica-east1 --format='value(status.url)')
        CHAT_URL=$(gcloud run services describe chat-service --platform=managed --region=southamerica-east1 --format='value(status.url)')
        gcloud run deploy api-gateway \
          --image="southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/api-gateway:$SHORT_SHA" \
          --region=southamerica-east1 \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --timeout=300 \
          --set-env-vars="AUTH_SERVICE_URL=$$AUTH_URL,AUCTION_SERVICE_URL=$$AUCTION_URL,CHAT_SERVICE_URL=$$CHAT_URL" \
          --set-secrets="JWT_SECRET=JWT_SECRET:latest"

        # Obtener la URL reci√©n desplegada y guardarla
        NEW_API_GATEWAY_URL=$(gcloud run services describe api-gateway --platform=managed --region=southamerica-east1 --format='value(status.url)')
        echo "üìù API Gateway URL deployed: $$NEW_API_GATEWAY_URL"
        echo "$$NEW_API_GATEWAY_URL" > /workspace/api_gateway_url.txt
    id: "deploy-api-gateway"
    waitFor: ["push-api-gateway", "set-public-permissions"]

  # ================================================================
  # Frontend Build and Deploy (Despu√©s del API Gateway)
  # ================================================================
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if [ -f /workspace/api_gateway_url.txt ]; then
          API_GATEWAY_URL=$(cat /workspace/api_gateway_url.txt)
        else
          echo "‚ùå No se pudo obtener la URL del API Gateway"
          exit 1
        fi

        WS_URL=$(echo "$$API_GATEWAY_URL" | sed 's/https:/wss:/')
        echo "‚úÖ Using API Gateway URL: $$API_GATEWAY_URL"
        echo "‚úÖ Using WebSocket URL: $$WS_URL"
        echo "‚úÖ Using Supabase URL: $$SUPABASE_URL"
        docker build \
          -t southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/frontend:$SHORT_SHA \
          --build-arg PUBLIC_API_URL=$$API_GATEWAY_URL \
          --build-arg PUBLIC_WS_URL=$$WS_URL/chat/socket.io \
          --build-arg PUBLIC_SUPABASE_URL=$$SUPABASE_URL \
          --build-arg PUBLIC_SUPABASE_ANON_KEY=$$SUPABASE_ANON_KEY \
          --build-arg NODE_ENV=production \
          --build-arg DEBUG=false \
          ./deal-online-frontend
    id: "build-frontend"
    secretEnv: ["SUPABASE_URL", "SUPABASE_ANON_KEY"]
    waitFor: ["deploy-api-gateway"]

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/frontend:$SHORT_SHA",
      ]
    id: "push-frontend"
    waitFor: ["build-frontend"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        if [ -f /workspace/api_gateway_url.txt ]; then
          API_GATEWAY_URL=$(cat /workspace/api_gateway_url.txt)
        else
          echo "‚ùå No se pudo obtener la URL del API Gateway desde archivo, intentando gcloud"
          API_GATEWAY_URL=$(gcloud run services describe api-gateway --platform=managed --region=southamerica-east1 --format='value(status.url)')
        fi

        WS_URL=$(echo "$$API_GATEWAY_URL" | sed 's/https:/wss:/')
        echo "üöÄ Deploying frontend with API Gateway URL: $$API_GATEWAY_URL"
        echo "üöÄ Deploying frontend with WebSocket URL: $$WS_URL"
        echo "üöÄ Deploying frontend with Supabase URL: $$SUPABASE_URL"
        gcloud run deploy deal-online-frontend \
          --image=southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/frontend:$SHORT_SHA \
          --region=southamerica-east1 \
          --platform=managed \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --timeout=300 \
          --port=3000 \
          --set-env-vars="PUBLIC_API_URL=$$API_GATEWAY_URL,PUBLIC_WS_URL=$$WS_URL/chat/socket.io,NODE_ENV=production,DEBUG=false" \
          --set-secrets="PUBLIC_SUPABASE_URL=SUPABASE_URL:latest,PUBLIC_SUPABASE_ANON_KEY=SUPABASE_ANON_KEY:latest"
    id: "deploy-frontend"
    waitFor: ["push-frontend"]
    secretEnv: ["SUPABASE_URL", "SUPABASE_ANON_KEY"] # ================================================================
  # Configurar permisos p√∫blicos para el frontend
  # ================================================================
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run services add-iam-policy-binding deal-online-frontend --region=southamerica-east1 --member="allUsers" --role="roles/run.invoker"
    id: "set-frontend-public-permissions"
    waitFor: ["deploy-frontend"]

images:
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/api-gateway:$SHORT_SHA"
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auth-service:$SHORT_SHA"
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/auction-service:$SHORT_SHA"
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/chat-service:$SHORT_SHA"
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/email-service:$SHORT_SHA"
  - "southamerica-east1-docker.pkg.dev/$PROJECT_ID/deal-online-repo/frontend:$SHORT_SHA"

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/SUPABASE_URL/versions/latest
      env: "SUPABASE_URL"
    - versionName: projects/$PROJECT_ID/secrets/SUPABASE_ANON_KEY/versions/latest
      env: "SUPABASE_ANON_KEY"

options:
  machineType: E2_MEDIUM
  logging: CLOUD_LOGGING_ONLY
timeout: "1200s"
