---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Crear Subasta - Deal Online">
    <Header />

    <main class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <h1 class="text-3xl font-bold mb-6 text-primary-700">
            Crear Nueva Subasta
        </h1>

        <!-- Contenedores para mensajes de éxito y error -->
        <div id="error-message" class="hidden mb-4 p-4 bg-red-100 text-red-700 rounded"></div>
        <div id="success-message" class="hidden mb-4 p-4 bg-green-100 text-green-700 rounded"></div>

        <form id="auction-form" class="bg-white shadow rounded-lg p-6">
            <!-- Campo: Nombre del Producto -->
            <div class="mb-4">
                <label for="productName" class="block text-gray-700 font-semibold mb-2">
                    Nombre del Producto
                </label>
                <input
                    id="productName"
                    name="productName"
                    type="text"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    required
                />
            </div>

            <!-- Campo: Descripción -->
            <div class="mb-4">
                <label for="productDescription" class="block text-gray-700 font-semibold mb-2">
                    Descripción
                </label>
                <textarea
                    id="productDescription"
                    name="productDescription"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    rows="4"
                    placeholder="Describe tu producto..."
                    required
                ></textarea>
            </div>

            <!-- Campo: Subida de Imagen -->
            <div class="mb-4">
                <label for="image" class="block text-gray-700 font-semibold mb-2">
                    Imagen del Producto
                </label>
                <div id="drop-zone" class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors">
                    <input
                        id="image"
                        name="image"
                        type="file"
                        accept="image/*"
                        class="hidden"
                    />
                    <div id="image-preview" class="hidden mb-4">
                        <img id="preview-img" src="" alt="Vista previa" class="max-w-full h-48 object-cover mx-auto rounded" />
                        <button type="button" id="remove-image" class="mt-2 text-red-600 hover:text-red-800 text-sm">
                            Eliminar imagen
                        </button>
                    </div>
                    <div id="upload-placeholder">
                        <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p class="text-gray-600 mb-2">
                            <button type="button" id="upload-btn" class="text-primary-600 hover:text-primary-500 font-medium">
                                Subir una imagen
                            </button>
                            o arrastra y suelta aquí
                        </p>
                        <p class="text-sm text-gray-500">PNG, JPG, GIF hasta 5MB</p>
                    </div>
                </div>
            </div>

            <!-- Campo: Precio Inicial -->
            <div class="mb-4">
                <label for="startPrice" class="block text-gray-700 font-semibold mb-2">
                    Precio Inicial (USD)
                </label>
                <input
                    id="startPrice"
                    name="startPrice"
                    type="number"
                    min="0.01"
                    step="0.01"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    required
                />
            </div>

            <!-- Campo: Fecha de Finalización -->
            <div class="mb-6">
                <label for="endTime" class="block text-gray-700 font-semibold mb-2">
                    Fecha de Finalización de la Subasta
                </label>
                <input
                    id="endTime"
                    name="endTime"
                    type="datetime-local"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    required
                />
            </div>

            <button
                id="submit-btn"
                type="submit"
                class="w-full bg-primary-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-primary-700 transition disabled:opacity-50 disabled:cursor-not-allowed"
            >
                Crear Subasta
            </button>
        </form>
    </main>
    <Footer />
</Layout>

<script>
    import { $token } from "../stores/authStore.js";
    import { api } from "../services/api.js";
    import { supabase } from "../services/supabaseClient.js";

    // --- Elementos del DOM ---
    const form = document.getElementById('auction-form');
    const errorDiv = document.getElementById('error-message');
    const successDiv = document.getElementById('success-message');
    const submitBtn = document.getElementById('submit-btn');
    const imageInput = document.getElementById('image');
    const uploadBtn = document.getElementById('upload-btn');
    const imagePreview = document.getElementById('image-preview');
    const previewImg = document.getElementById('preview-img');
    const uploadPlaceholder = document.getElementById('upload-placeholder');
    const removeImageBtn = document.getElementById('remove-image');
    const dropZone = document.getElementById('drop-zone');

    // --- Funciones de UI ---
    function showError(message) {
        errorDiv.textContent = message;
        errorDiv.classList.remove('hidden');
        successDiv.classList.add('hidden');
    }

    function showSuccess(message) {
        successDiv.textContent = message;
        successDiv.classList.remove('hidden');
        errorDiv.classList.add('hidden');
    }

    function hideMessages() {
        errorDiv.classList.add('hidden');
        successDiv.classList.add('hidden');
    }

    // --- Lógica de Subida de Imagen ---
    uploadBtn.addEventListener('click', () => imageInput.click());
    removeImageBtn.addEventListener('click', () => {
        imageInput.value = '';
        imagePreview.classList.add('hidden');
        uploadPlaceholder.classList.remove('hidden');
    });

    imageInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) handleFile(file);
    });

    // Lógica de Drag and Drop
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, (e) => {
            e.preventDefault();
            e.stopPropagation();
        }, false);
    });
    ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, () => dropZone.classList.add('border-primary-500', 'bg-primary-50'), false);
    });
    ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, () => dropZone.classList.remove('border-primary-500', 'bg-primary-50'), false);
    });
    dropZone.addEventListener('drop', (e) => {
        const file = e.dataTransfer.files[0];
        if (file) handleFile(file);
    }, false);

    function handleFile(file) {
        if (file.size > 5 * 1024 * 1024) {
            showError('La imagen no puede ser mayor a 5MB');
            return;
        }
        if (!file.type.startsWith('image/')) {
            showError('Por favor selecciona un archivo de imagen válido');
            return;
        }
        const reader = new FileReader();
        reader.onload = (e) => {
            previewImg.src = e.target.result;
            imagePreview.classList.remove('hidden');
            uploadPlaceholder.classList.add('hidden');
        };
        reader.readAsDataURL(file);
    }

    // --- Lógica de Envío del Formulario ---
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        hideMessages();

        const token = $token.get();
        if (!token) {
            showError('Debes iniciar sesión para crear una subasta.');
            // Opcional: redirigir al login
            // window.location.href = '/login';
            return;
        }

        const formData = new FormData(form);
        const auctionData = {
            productName: formData.get('productName').trim(),
            productDescription: formData.get('productDescription').trim(),
            startPrice: parseFloat(formData.get('startPrice')),
            endTime: new Date(formData.get('endTime')).toISOString(), // Asegurar formato ISO
            imageUrl: null
        };

        if (!auctionData.productName || !auctionData.startPrice || !auctionData.endTime) {
            showError('Nombre, precio inicial y fecha de finalización son obligatorios.');
            return;
        }

        submitBtn.disabled = true;
        submitBtn.textContent = 'Procesando...';

        try {
            // 1. Subir la imagen a Supabase (si existe)
            const imageFile = imageInput.files[0];
            if (imageFile) {
                submitBtn.textContent = 'Subiendo imagen...';

                // Autenticar en Supabase con el token JWT de nuestro backend
                await supabase.auth.setSession({
                    access_token: token,
                    refresh_token: token // Supabase necesita ambos, podemos usar el mismo
                });
                
                const fileExt = imageFile.name.split('.').pop();
                const fileName = `${Date.now()}-${Math.random().toString(36).substring(2)}.${fileExt}`;
                const filePath = `products/${fileName}`;

                const { data: uploadData, error: uploadError } = await supabase.storage
                    .from('deal-online') // Nombre de tu bucket
                    .upload(filePath, imageFile);

                if (uploadError) throw new Error(`Error al subir la imagen: ${uploadError.message}`);

                const { data: urlData } = supabase.storage
                    .from('deal-online')
                    .getPublicUrl(filePath);
                
                auctionData.imageUrl = urlData.publicUrl;
            }

            // 2. Crear la subasta a través de nuestro microservicio
            submitBtn.textContent = 'Creando subasta...';
            const response = await api.createAuction(auctionData, token);
            
            showSuccess('¡Subasta creada con éxito! Serás redirigido...');
            
            // 3. Redirigir a la página de la subasta
            setTimeout(() => {
                window.location.href = `/auctions/${response.id}`;
            }, 2000);

        } catch (err) {
            console.error('Error al crear la subasta:', err);
            showError(err.message || 'Ocurrió un error inesperado.');
        } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Crear Subasta';
        }
    });
</script>
