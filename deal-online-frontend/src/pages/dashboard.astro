---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from "../components/Footer.astro";
---

<Layout title="Dashboard - Deal Online">
  <Header />
  
  <div class="min-h-screen bg-gray-50">
    <!-- Protected Route Check -->
    <div id="auth-check" class="hidden min-h-screen flex items-center justify-center">
      <div class="text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500 mx-auto mb-4"></div>
        <p class="text-gray-600">Verificando autenticación...</p>
      </div>
    </div>

    <!-- Dashboard Content -->
    <div id="dashboard-content" class="hidden">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Welcome Header -->
        <div class="bg-gradient-to-r from-primary-500 to-accent-500 rounded-lg p-6 text-white mb-8">
          <h1 class="text-2xl font-bold mb-2">¡Bienvenido de vuelta, <span id="user-name">Usuario</span>!</h1>
          <p class="opacity-90">Gestiona tus subastas y ofertas desde tu panel de control</p>
        </div>

        <!-- Quick Stats -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div class="bg-white rounded-lg p-6 shadow-sm">
            <div class="flex items-center">
              <div class="p-3 bg-primary-100 rounded-lg">
                <svg class="w-6 h-6 text-primary-600" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                </svg>
              </div>
              <div class="ml-4">
                <p class="text-sm text-gray-600">Mis Subastas</p>
                <p class="text-2xl font-bold text-gray-900">
                  <span id="products-count" class="inline-block min-w-[2ch]">-</span>
                </p>
              </div>
            </div>
          </div>

          <div class="bg-white rounded-lg p-6 shadow-sm">
            <div class="flex items-center">
              <div class="p-3 bg-accent-100 rounded-lg">
                <svg class="w-6 h-6 text-accent-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.293l-3-3a1 1 0 00-1.414 1.414L10.586 9.5 9.293 8.207a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4a1 1 0 00-1.414-1.414L11 9.586z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-4">
                <p class="text-sm text-gray-600">Subastas Activas</p>
                <p class="text-2xl font-bold text-gray-900">
                  <span id="active-auctions-count" class="inline-block min-w-[2ch]">-</span>
                </p>
              </div>
            </div>
          </div>

          <div class="bg-white rounded-lg p-6 shadow-sm">
            <div class="flex items-center">
              <div class="p-3 bg-success-100 rounded-lg">
                <svg class="w-6 h-6 text-success-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 17v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-4">
                <p class="text-sm text-gray-600">Mis Ofertas</p>
                <p class="text-2xl font-bold text-gray-900">
                  <span id="bids-count" class="inline-block min-w-[2ch]">-</span>
                </p>
              </div>
            </div>
          </div>

          <div class="bg-white rounded-lg p-6 shadow-sm">
            <div class="flex items-center">
              <div class="p-3 bg-warning-100 rounded-lg">
                <svg class="w-6 h-6 text-warning-600" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"/>
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.766 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.766-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-4">
                <p class="text-sm text-gray-600">Ganadas</p>
                <p class="text-2xl font-bold text-gray-900">
                  <span id="won-auctions-count" class="inline-block min-w-[2ch]">-</span>
                </p>
              </div>
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <a href="/createAuction" class="bg-white rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow group">
            <div class="flex items-center">
              <div class="p-3 bg-primary-100 rounded-lg group-hover:bg-primary-200 transition-colors">
                <svg class="w-6 h-6 text-primary-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="font-semibold text-gray-900">Crear Subasta</h3>
                <p class="text-sm text-gray-600">Crea una nueva subasta</p>
              </div>
            </div>
          </a>

          <a href="/myAuctions" class="bg-white rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow group">
            <div class="flex items-center">
              <div class="p-3 bg-accent-100 rounded-lg group-hover:bg-accent-200 transition-colors">
                <svg class="w-6 h-6 text-accent-600" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="font-semibold text-gray-900">Mis Subastas</h3>
                <p class="text-sm text-gray-600">Gestiona tus productos</p>
              </div>
            </div>
          </a>

          <a href="/myBids" class="bg-white rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow group">
            <div class="flex items-center">
              <div class="p-3 bg-success-100 rounded-lg group-hover:bg-success-200 transition-colors">
                <svg class="w-6 h-6 text-success-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 17v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="font-semibold text-gray-900">Mis Ofertas</h3>
                <p class="text-sm text-gray-600">Ve tus participaciones</p>
              </div>
            </div>
          </a>
        </div>

        <!-- Recent Activity -->
        <div class="bg-white rounded-lg shadow-sm">
          <div class="p-6 border-b border-gray-200">
            <h2 class="text-lg font-semibold text-gray-900">Actividad Reciente</h2>
          </div>
          <div id="recent-activity" class="p-6">
            <div class="flex items-center justify-center py-8">
              <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <Footer />
</Layout>

<script>
  import { $user, $token, authActions } from '../stores/authStore.js';
  import { api } from '../services/api.js';

  // DOM elements
  const authCheck = document.getElementById('auth-check');
  const dashboardContent = document.getElementById('dashboard-content');
  const userName = document.getElementById('user-name');
  const productsCountEl = document.getElementById('products-count');
  const activeAuctionsCountEl = document.getElementById('active-auctions-count');
  const bidsCountEl = document.getElementById('bids-count');
  const wonAuctionsCountEl = document.getElementById('won-auctions-count');
  const recentActivityEl = document.getElementById('recent-activity');

  // State
  let dashboardData = {
    userAuctions: [],
    userBids: [],
    userStats: null
  };

  /**
   * Check if user is authenticated
   */
  async function checkAuthentication() {
    const token = $token.get();
    const user = $user.get();

    if (!token || !user) {
      showAuthCheck();
      // Redirect to login after a short delay
      setTimeout(() => {
        window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);
      }, 1000);
      return false;
    }

    // User is authenticated
    hideAuthCheck();
    if (userName) {
      userName.textContent = user.nombre || user.name || 'Usuario';
    }
    
    return true;
  }

  /**
   * Show authentication loading state
   */
  function showAuthCheck() {
    if (authCheck) authCheck.classList.remove('hidden');
    if (dashboardContent) dashboardContent.classList.add('hidden');
  }

  /**
   * Hide authentication loading state
   */
  function hideAuthCheck() {
    if (authCheck) authCheck.classList.add('hidden');
    if (dashboardContent) dashboardContent.classList.remove('hidden');
  }

  /**
   * Update stats display with loading state
   */
  function showStatsLoading() {
    const elements = [productsCountEl, activeAuctionsCountEl, bidsCountEl, wonAuctionsCountEl];
    elements.forEach(el => {
      if (el) {
        el.innerHTML = '<div class="animate-pulse bg-gray-200 h-4 w-8 rounded"></div>';
      }
    });
  }

  /**
   * Update stats display with actual data
   */
  function updateStatsDisplay(stats) {
    if (productsCountEl) productsCountEl.textContent = stats.productsCount || '0';
    if (activeAuctionsCountEl) activeAuctionsCountEl.textContent = stats.activeAuctionsCount || '0';
    if (bidsCountEl) bidsCountEl.textContent = stats.bidsCount || '0';
    if (wonAuctionsCountEl) wonAuctionsCountEl.textContent = stats.wonAuctionsCount || '0';
  }

  /**
   * Update stats display with error state
   */
  function showStatsError() {
    const elements = [productsCountEl, activeAuctionsCountEl, bidsCountEl, wonAuctionsCountEl];
    elements.forEach(el => {
      if (el) el.textContent = '0';
    });
  }

  /**
   * Load dashboard data from API
   */
  async function loadDashboardData() {
    try {
      const token = $token.get();
      const currentUser = $user.get();
      
      if (!token || !currentUser) {
        throw new Error('No token or user available');
      }

      showStatsLoading();

      // Try to use getUserStats first
      let userStats = null;
      try {
        userStats = await api.getUserStats();
        console.log('✅ Loaded user stats from API:', userStats);
      } catch (statsError) {
        console.warn('⚠️ getUserStats not available, falling back to individual calls:', statsError.message);
      }

      if (userStats) {
        // Use stats from getUserStats endpoint
        updateStatsDisplay({
          productsCount: userStats.productsCount || userStats.totalProducts || 0,
          activeAuctionsCount: userStats.activeAuctionsCount || userStats.activeAuctions || 0,
          bidsCount: userStats.bidsCount || userStats.totalBids || 0,
          wonAuctionsCount: userStats.wonAuctionsCount || userStats.wonAuctions || 0
        });
        dashboardData.userStats = userStats;
      } else {
        // Use the auction APIs to get real data
        const [userAuctions, userBids] = await Promise.all([
          api.getMyAuctions().catch(err => {
            console.warn('⚠️ Failed to load user auctions:', err.message);
            return [];
          }),
          api.getUserBids().catch(err => {
            console.warn('⚠️ Failed to load user bids:', err.message);
            return [];
          })
        ]);

        dashboardData.userAuctions = userAuctions;
        dashboardData.userBids = userBids;

        // Calculate stats from the auction data
        const stats = calculateStatsFromAuctionData(userAuctions, userBids, currentUser);
        updateStatsDisplay(stats);
      }

      // Load recent activity
      await loadRecentActivity();

    } catch (error) {
      console.error('❌ Error loading dashboard data:', error);
      showStatsError();
      showRecentActivityError();
    }
  }

  /**
   * Calculate stats from auction data
   */
  function calculateStatsFromAuctionData(auctions, bids, currentUser) {
    const auctionsCount = auctions.length;
    
    // Count active auctions
    const activeAuctionsCount = auctions.filter(auction => {
      return auction && auction.status === 'active';
    }).length;
    
    const bidsCount = bids.length;
    
    // Count won auctions
    const wonAuctionsCount = bids.filter(bid => {
      const auction = bid.auction;
      return auction && 
             auction.status === 'closed' && 
             (auction.winner_id === currentUser.id || auction.winnerId === currentUser.id);
    }).length;

    return {
      productsCount: auctionsCount,
      activeAuctionsCount,
      bidsCount,
      wonAuctionsCount
    };
  }

  /**
   * Load and display recent activity
   */
  async function loadRecentActivity() {
    try {
      const token = $token.get();
      if (!token) return;

      // If we don't have auctions and bids data, fetch them
      if (dashboardData.userAuctions.length === 0 && dashboardData.userBids.length === 0) {
        const [auctions, bids] = await Promise.all([
          api.getMyAuctions().catch(() => []),
          api.getUserBids().catch(() => [])
        ]);
        dashboardData.userAuctions = auctions;
        dashboardData.userBids = bids;
      }

      displayRecentActivity(dashboardData.userAuctions, dashboardData.userBids);
    } catch (error) {
      console.error('❌ Error loading recent activity:', error);
      showRecentActivityError();
    }
  }

  /**
   * Display recent activity in the UI
   */
  function displayRecentActivity(auctions, bids) {
    if (!recentActivityEl) return;

    // Combine and sort recent activities
    const activities = [];
    
    // Recent auctions (last 5)
    auctions.slice(-5).forEach(auction => {
      activities.push({
        type: 'auction',
        date: new Date(auction.createdAt || auction.created_at),
        content: `Creaste la subasta "${auction.productName || auction.product_name || 'Subasta'}"`,
        link: `/auctions/${auction.id}`
      });
    });
    
    // Recent bids (last 5)
    bids.slice(-5).forEach(bid => {
      const auction = bid.auction;
      const auctionName = auction?.productName || auction?.product_name || 'Subasta';
      
      activities.push({
        type: 'bid',
        date: new Date(bid.createdAt || bid.created_at),
        content: `Ofertaste $${(bid.amount || 0).toLocaleString()} en "${auctionName}"`,
        link: auction ? `/auctions/${auction.id}` : null
      });
    });
    
    // Sort by date (most recent first)
    activities.sort((a, b) => b.date.getTime() - a.date.getTime());
    
    if (activities.length === 0) {
      recentActivityEl.innerHTML = `
        <div class="text-center py-8">
          <div class="text-gray-400 mb-2">
            <svg class="w-12 h-12 mx-auto" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
            </svg>
          </div>
          <p class="text-gray-500">No hay actividad reciente</p>
          <p class="text-sm text-gray-400 mt-1">Comienza creando tu primera subasta o haciendo una oferta</p>
        </div>
      `;
      return;
    }
    
    recentActivityEl.innerHTML = `
      <div class="space-y-4">
        ${activities.slice(0, 5).map(activity => `
          <div class="flex items-start space-x-3">
            <div class="flex-shrink-0">
              ${activity.type === 'auction' ? `
                <div class="w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center">
                  <svg class="w-4 h-4 text-primary-600" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
                  </svg>
                </div>
              ` : `
                <div class="w-8 h-8 bg-success-100 rounded-full flex items-center justify-center">
                  <svg class="w-4 h-4 text-success-600" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 17v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
                  </svg>
                </div>
              `}
            </div>
            <div class="flex-1">
              <p class="text-sm text-gray-900">${activity.content}</p>
              <p class="text-xs text-gray-500">${formatDate(activity.date)}</p>
            </div>
            ${activity.link ? `
              <a href="${activity.link}" class="text-primary-600 hover:text-primary-500 text-sm">
                Ver →
              </a>
            ` : ''}
          </div>
        `).join('')}
      </div>
    `;
  }

  /**
   * Show error state for recent activity
   */
  function showRecentActivityError() {
    if (!recentActivityEl) return;
    
    recentActivityEl.innerHTML = `
      <div class="text-center py-8">
        <div class="text-red-400 mb-2">
          <svg class="w-12 h-12 mx-auto" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
          </svg>
        </div>
        <p class="text-gray-500">Error al cargar actividad reciente</p>
        <button onclick="location.reload()" class="text-sm text-primary-600 hover:text-primary-500 mt-2">
          Intentar de nuevo
        </button>
      </div>
    `;
  }

  /**
   * Format date for display
   */
  function formatDate(date) {
    if (!date || isNaN(new Date(date).getTime())) return 'Fecha no disponible';
    
    const dateObj = new Date(date);
    const now = new Date();
    const diffMs = now.getTime() - dateObj.getTime();
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
    
    if (diffDays === 0) {
      return dateObj.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });
    } else if (diffDays === 1) {
      return 'Ayer';
    } else if (diffDays < 7) {
      return `${diffDays} días atrás`;
    } else {
      return dateObj.toLocaleDateString('es-ES', { 
        day: 'numeric', 
        month: 'short',
        year: dateObj.getFullYear() !== now.getFullYear() ? 'numeric' : undefined
      });
    }
  }

  /**
   * Initialize dashboard
   */
  async function initDashboard() {
    try {
      const isAuthenticated = await checkAuthentication();
      if (isAuthenticated) {
        await loadDashboardData();
      }
    } catch (error) {
      console.error('❌ Error initializing dashboard:', error);
      showStatsError();
      showRecentActivityError();
    }
  }

  // Listen for auth state changes
  $token.subscribe(async (token) => {
    if (token) {
      await initDashboard();
    } else {
      showAuthCheck();
    }
  });

  // Initial load
  document.addEventListener('DOMContentLoaded', () => {
    initDashboard();
  });

  // Also run immediately in case DOM is already loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initDashboard);
  } else {
    initDashboard();
  }
</script>