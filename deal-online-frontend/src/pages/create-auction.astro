---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Crear Subasta - Deal Online">
    <Header />

    <main class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <h1 class="text-3xl font-bold mb-6 text-primary-700">
            Crear Nueva Subasta
        </h1>

        <div id="form-message" class="hidden mb-4 p-4 rounded-lg"></div>

        <form id="auction-form" class="bg-white shadow rounded-lg p-6 space-y-6">
            <div>
                <label for="productName" class="block text-gray-700 font-semibold mb-2">Nombre del Producto</label>
                <input
                    id="productName"
                    name="productName"
                    type="text"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    required
                />
            </div>

            <div>
                <label for="productDescription" class="block text-gray-700 font-semibold mb-2">Descripción</label>
                <textarea
                    id="productDescription"
                    name="productDescription"
                    class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                    rows="4"
                    placeholder="Describe tu producto..."
                    required
                ></textarea>
            </div>

            <div>
                <label class="block text-gray-700 font-semibold mb-2">Imagen del Producto</label>
                <div id="drop-zone" class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer">
                    <input
                        id="image-input"
                        name="image"
                        type="file"
                        accept="image/png, image/jpeg, image/gif"
                        class="hidden"
                    />
                    <div id="image-preview" class="hidden mb-4">
                        <img id="preview-img" src="" alt="Vista previa" class="max-w-full h-48 object-cover mx-auto rounded" />
                        <button type="button" id="remove-image-button" class="mt-2 text-red-600 hover:text-red-800 text-sm font-medium">
                            Quitar imagen
                        </button>
                    </div>
                    <div id="upload-placeholder">
                        <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p class="text-gray-600">
                            Arrastra y suelta una imagen aquí, o 
                            <span class="text-primary-600 hover:text-primary-500 font-medium">haz clic para seleccionar</span>
                        </p>
                        <p class="text-sm text-gray-500 mt-1">PNG, JPG, GIF hasta 5MB</p>
                    </div>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="startPrice" class="block text-gray-700 font-semibold mb-2">Precio Inicial (USD)</label>
                    <input
                        id="startPrice"
                        name="startPrice"
                        type="number"
                        min="0.01"
                        step="0.01"
                        class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                        required
                    />
                </div>

                <div>
                    <label for="endTime" class="block text-gray-700 font-semibold mb-2">Fecha de Finalización</label>
                    <input
                        id="endTime"
                        name="endTime"
                        type="datetime-local"
                        class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500"
                        required
                    />
                </div>
            </div>

            <button
                id="submit-button"
                type="submit"
                class="w-full bg-primary-600 text-white font-semibold px-6 py-3 rounded-lg hover:bg-primary-700 transition disabled:opacity-50 disabled:cursor-not-allowed"
            >
                Crear Subasta
            </button>
        </form>
    </main>
    <Footer />
</Layout>

<script>
    import { $token, $user } from "../stores/authStore.js";
    import { api } from "../services/api.js";
    import { supabase } from "../services/supabaseClient.js";

    // --- Elementos del DOM ---
    const form = document.getElementById('auction-form');
    const formMessage = document.getElementById('form-message');
    const submitButton = document.getElementById('submit-button');
    const dropZone = document.getElementById('drop-zone');
    const imageInput = document.getElementById('image-input');
    const imagePreview = document.getElementById('image-preview');
    const previewImg = document.getElementById('preview-img');
    const uploadPlaceholder = document.getElementById('upload-placeholder');
    const removeImageButton = document.getElementById('remove-image-button');

    let selectedFile = null; // Para guardar el archivo seleccionado

    // --- Funciones de UI ---
    function showMessage(message, isError = false) {
        formMessage.textContent = message;
        formMessage.className = `mb-4 p-4 rounded-lg ${isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`;
        formMessage.classList.remove('hidden');
    }

    // --- Lógica de Subida de Imagen ---
    dropZone.addEventListener('click', () => imageInput.click());
    removeImageButton.addEventListener('click', () => {
        selectedFile = null;
        imageInput.value = '';
        imagePreview.classList.add('hidden');
        uploadPlaceholder.classList.remove('hidden');
    });

    imageInput.addEventListener('change', (e) => handleFile(e.target.files[0]));

    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, (e) => {
            e.preventDefault();
            e.stopPropagation();
        }, false);
    });
    ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, () => dropZone.classList.add('border-primary-500', 'bg-primary-50'), false);
    });
    ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, () => dropZone.classList.remove('border-primary-500', 'bg-primary-50'), false);
    });
    dropZone.addEventListener('drop', (e) => handleFile(e.dataTransfer.files[0]), false);

    function handleFile(file) {
        if (!file) return;
        if (file.size > 5 * 1024 * 1024) { // 5MB
            showMessage('La imagen no puede ser mayor a 5MB', true);
            return;
        }
        if (!file.type.startsWith('image/')) {
            showMessage('Por favor selecciona un archivo de imagen válido', true);
            return;
        }
        
        selectedFile = file;
        previewImg.src = URL.createObjectURL(file);
        imagePreview.classList.remove('hidden');
        uploadPlaceholder.classList.add('hidden');
    }

    // --- Lógica Principal de la Página ---
    document.addEventListener('DOMContentLoaded', () => {
        if (!$token.get()) {
            window.location.href = '/login?redirect=/create-auction';
            return;
        }
        
        // Configurar fecha mínima para el input de fecha
        const now = new Date();
        now.setMinutes(now.getMinutes() - now.getTimezoneOffset() + 1); // Añadir 1 minuto para asegurar que sea en el futuro
        const minDateTime = now.toISOString().slice(0, 16);
        document.getElementById('endTime').min = minDateTime;
    });

    // --- Lógica de Envío del Formulario ---
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        formMessage.classList.add('hidden');

        if (!selectedFile) {
            showMessage('Por favor, sube una imagen para el producto.', true);
            return;
        }

        submitButton.disabled = true;

        try {
            // 1. Subir la imagen a Supabase
            submitButton.textContent = 'Subiendo imagen...';
            const user = $user.get();
            const fileExt = selectedFile.name.split('.').pop();
            const fileName = `${user.id}-${Date.now()}.${fileExt}`;
            const filePath = `public/${fileName}`;

            // REFINAMIENTO: No es necesario setSession para subir a buckets públicos.
            // La anon key configurada en tu cliente de Supabase es suficiente.
            const { data: uploadData, error: uploadError } = await supabase.storage
                .from('deal-online') // <-- Reemplaza 'deal-online' con el nombre de tu bucket
                .upload(filePath, selectedFile);

            if (uploadError) throw new Error(`Error al subir la imagen: ${uploadError.message}`);

            // 2. Obtener la URL pública de la imagen
            const { data: urlData } = supabase.storage
                .from('deal-online') // <-- Reemplaza 'deal-online' con el nombre de tu bucket
                .getPublicUrl(filePath);

            // 3. Crear la subasta en nuestro backend
            submitButton.textContent = 'Creando subasta...';
            const formData = new FormData(form);
            const auctionData = {
                productName: formData.get('productName'),
                productDescription: formData.get('productDescription'),
                imageUrl: urlData.publicUrl, // Usamos la URL de Supabase
                startPrice: parseFloat(formData.get('startPrice')),
                endTime: new Date(formData.get('endTime')).toISOString(),
            };
            
            const response = await api.createAuction(auctionData);
            
            showMessage('¡Subasta creada con éxito! Serás redirigido...', false);
            
            setTimeout(() => {
                window.location.href = `/auctions/${response.id}`;
            }, 2000);

        } catch (err) {
            console.error('Error al crear la subasta:', err);
            showMessage(err.message || 'Ocurrió un error inesperado.', true);
            submitButton.disabled = false;
            submitButton.textContent = 'Crear Subasta';
        }
    });
</script>