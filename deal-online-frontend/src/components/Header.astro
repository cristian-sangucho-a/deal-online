---
// No imports de stores aquí - se manejan en el cliente
---

<header class="bg-white shadow-sm border-b border-gray-200">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-gradient-to-r from-primary-500 to-accent-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
            </svg>
          </div>
          <span class="text-xl font-bold text-gray-900">Deal Online</span>
        </a>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href="/" class="text-gray-700 hover:text-primary-600 transition-colors">Inicio</a>
        <a href="/auctions" class="text-gray-700 hover:text-primary-600 transition-colors">Subastas</a>
        <a href="/products" class="text-gray-700 hover:text-primary-600 transition-colors">Productos</a>
      </nav>

      <!-- Auth buttons -->
      <div class="flex items-center space-x-4">
        <div id="auth-buttons">
          <!-- Loading state -->
          <div class="flex items-center space-x-4">
            <div class="animate-pulse bg-gray-200 h-6 w-20 rounded"></div>
            <div class="animate-pulse bg-gray-200 h-8 w-24 rounded-lg"></div>
          </div>
        </div>
        
        <!-- Mobile menu button -->
        <button id="mobile-menu-button" class="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="md:hidden hidden border-t border-gray-200">
    <div class="px-2 pt-2 pb-3 space-y-1">
      <a href="/" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Inicio</a>
      <a href="/auctions" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Subastas</a>
      <a href="/products" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Productos</a>
      <!-- Mobile auth items will be added here by JS -->
      <div id="mobile-auth-items"></div>
    </div>
  </div>
</header>

<script>
  // Solo ejecutar en el cliente
  if (typeof window !== 'undefined') {
    // Importar dinámicamente los stores
    import('../stores/authStore.js').then(({ $user, $token, authActions }) => {
      let currentMenuTimeout;

      function renderAuthButtons() {
        const authButtonsContainer = document.getElementById('auth-buttons');
        const mobileAuthItems = document.getElementById('mobile-auth-items');
        
        if (!authButtonsContainer) return;

        try {
          const user = $user.get();
          const token = $token.get();

          if (user && token) {
            // Desktop auth buttons
            authButtonsContainer.innerHTML = `
              <div class="flex items-center space-x-4">
                <a href="/dashboard" class="text-gray-700 hover:text-primary-600 transition-colors">
                  Dashboard
                </a>
                <a href="/createProduct" class="bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 transition-colors">
                  Vender
                </a>
                <div class="relative">
                  <button id="user-menu-button" class="flex items-center space-x-2 text-gray-700 hover:text-primary-600 transition-colors">
                    <span class="font-medium">${user.nombre}</span>
                    <svg class="w-4 h-4 transition-transform duration-200" id="dropdown-arrow" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                    </svg>
                  </button>
                  <div id="user-menu" class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 hidden border border-gray-200 transform opacity-0 scale-95 transition-all duration-200">
                    <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">Mi Perfil</a>
                    <a href="/my-auctions" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">Mis Subastas</a>
                    <a href="/my-bids" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">Mis Ofertas</a>
                    <hr class="my-1 border-gray-200">
                    <button id="logout-btn" class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors">
                      Cerrar Sesión
                    </button>
                  </div>
                </div>
              </div>
            `;

            // Mobile auth items
            if (mobileAuthItems) {
              mobileAuthItems.innerHTML = `
                <hr class="my-2 border-gray-200">
                <a href="/dashboard" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Dashboard</a>
                <a href="/createProduct" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Vender</a>
                <a href="/profile" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Mi Perfil</a>
                <a href="/my-auctions" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Mis Subastas</a>
                <a href="/my-bids" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Mis Ofertas</a>
                <button id="mobile-logout-btn" class="block w-full text-left px-3 py-2 text-gray-700 hover:text-primary-600">
                  Cerrar Sesión
                </button>
              `;
            }

            // Setup dropdown menu interactions
            setupDropdownMenu();
            
            // Setup logout buttons
            setupLogoutButtons(authActions);

          } else {
            // Not authenticated
            authButtonsContainer.innerHTML = `
              <div class="flex items-center space-x-4">
                <a href="/login" class="text-gray-700 hover:text-primary-600 transition-colors">
                  Iniciar Sesión
                </a>
                <a href="/register" class="bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 transition-colors">
                  Registrarse
                </a>
              </div>
            `;

            // Mobile auth items
            if (mobileAuthItems) {
              mobileAuthItems.innerHTML = `
                <hr class="my-2 border-gray-200">
                <a href="/login" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Iniciar Sesión</a>
                <a href="/register" class="block px-3 py-2 text-gray-700 hover:text-primary-600">Registrarse</a>
              `;
            }
          }
        } catch (error) {
          console.error('Error rendering auth buttons:', error);
          // Fallback to login/register buttons
          authButtonsContainer.innerHTML = `
            <div class="flex items-center space-x-4">
              <a href="/login" class="text-gray-700 hover:text-primary-600 transition-colors">
                Iniciar Sesión
              </a>
              <a href="/register" class="bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 transition-colors">
                Registrarse
              </a>
            </div>
          `;
        }
      }

      function setupDropdownMenu() {
        const menuButton = document.getElementById('user-menu-button');
        const menu = document.getElementById('user-menu');
        const arrow = document.getElementById('dropdown-arrow');

        if (!menuButton || !menu) return;

        const showMenu = () => {
          clearTimeout(currentMenuTimeout);
          menu.classList.remove('hidden');
          // Trigger animation
          setTimeout(() => {
            menu.classList.remove('opacity-0', 'scale-95');
            menu.classList.add('opacity-100', 'scale-100');
            arrow?.classList.add('rotate-180');
          }, 10);
        };

        const hideMenu = () => {
          currentMenuTimeout = setTimeout(() => {
            menu.classList.remove('opacity-100', 'scale-100');
            menu.classList.add('opacity-0', 'scale-95');
            arrow?.classList.remove('rotate-180');
            // Hide after animation
            setTimeout(() => {
              menu.classList.add('hidden');
            }, 200);
          }, 150);
        };

        // Click to toggle
        menuButton.addEventListener('click', (e) => {
          e.stopPropagation();
          if (menu.classList.contains('hidden')) {
            showMenu();
          } else {
            hideMenu();
          }
        });

        // Hover interactions
        menuButton.addEventListener('mouseenter', showMenu);
        menu.addEventListener('mouseenter', showMenu);
        menuButton.addEventListener('mouseleave', hideMenu);
        menu.addEventListener('mouseleave', hideMenu);

        // Close when clicking outside
        document.addEventListener('click', (e) => {
          if (!menu.contains(e.target) && !menuButton.contains(e.target)) {
            hideMenu();
          }
        });

        // Close on escape key
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && !menu.classList.contains('hidden')) {
            hideMenu();
          }
        });
      }

      function setupLogoutButtons(authActions) {
        const logoutBtn = document.getElementById('logout-btn');
        const mobileLogoutBtn = document.getElementById('mobile-logout-btn');

        const handleLogout = async (e) => {
          e.preventDefault();
          try {
            await authActions.logout();
            window.location.href = '/';
          } catch (error) {
            console.error('Error during logout:', error);
            // Even if logout fails, redirect to home
            window.location.href = '/';
          }
        };

        logoutBtn?.addEventListener('click', handleLogout);
        mobileLogoutBtn?.addEventListener('click', handleLogout);
      }

      // Initial render
      renderAuthButtons();

      // Listen for auth state changes
      $user.subscribe(() => renderAuthButtons());
      $token.subscribe(() => renderAuthButtons());

      // Mobile menu toggle
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.toggle('hidden');
      });

      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        if (mobileMenu && !mobileMenu.contains(e.target) && !mobileMenuButton?.contains(e.target)) {
          mobileMenu.classList.add('hidden');
        }
      });

    }).catch(error => {
      console.error('Error loading auth store:', error);
      // Fallback rendering
      const authButtonsContainer = document.getElementById('auth-buttons');
      if (authButtonsContainer) {
        authButtonsContainer.innerHTML = `
          <div class="flex items-center space-x-4">
            <a href="/login" class="text-gray-700 hover:text-primary-600 transition-colors">
              Iniciar Sesión
            </a>
            <a href="/register" class="bg-primary-500 text-white px-4 py-2 rounded-lg hover:bg-primary-600 transition-colors">
              Registrarse
            </a>
          </div>
        `;
      }
    });
  }
</script>